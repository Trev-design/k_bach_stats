type Contact {
  id: ID!
  name: String!
  email: String!
  hasImage: String!
}

type Profile {
  id: ID!
  bio: String!
  contact: Contact!
}

type User {
  id: ID!
  entity: String!
  profile: Profile!
}

type Workspace {
  id: ID!
  name: String!
  description: String!
  joinrequestCopunt: Int!
  contacts: [Contact!]!
}

type Invitations {
  id: ID!
  subject: String!
  message: String!
  workspaceID: String!
  contactID: String!
}

type JoinRequests {
  id: ID!
  subject: String!
  message: String!
  profileID: String!
  worksapceID: String!
}

type UserEntity {
  user: ID!
}

type Query {
  userID(entity: String!): UserEntity!
  userByID(userID: String!): User!
}

type Mutation {
  makeInvitation(input: InvitationCredentials!): String!
  makeJoinRequest(input: JoinRequestCredentials!): String!
  makeWorkspace(input: WorkspaceCredentials!): String!
}

input InvitationCredentials {
  subject: String!
  message: String!
  workspaceID: String!
  userID: String!
  contactID: String!
}

input WorkspaceCredentials {
  name: String!
  description: String!
  userID: String!
}

input JoinRequestCredentials {
  subject: String!
  message: String!
  worksapceID: String!
  profileID: String!
}
