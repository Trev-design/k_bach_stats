version: '3'
services:
  rabbitmq:
    image: rabbitmq:4.1.1-management
    ports:
      - "5672:5672"
      - "15672:15672"
    #volumes:
    #  - ./certs/rabbit:/etc/rabbitmq/certs:ro
    #  - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      #RABBITMQ_CONFIG_FILE: /etc/rabbitmq/rabbitmq
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBIT_V_HOST}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 15s
      timeout: 15s
      retries: 8

  postgres:
    #build:
    #  context: .
    #  dockerfile: postgres.Dockerfile
    image: postgres:17.5-alpine3.21 
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_DB_USER} -d ${POSTGRES_DB_NAME}"]
      interval: 10s
      timeout: 10s
      retries: 6
    #volumes:
    #  - ./postgres.conf:/etc/postgresql/postgresql.conf
    #  - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    #command:
    #  - postgres
    #  - -c
    #  - config_file=/etc/postgresql/postgresql.conf
    #  - -c
    #  - hba_file=/etc/postgresql/pg_hba.conf

  redis:
    image: redis:8.0.2-alpine
    ports:
      - "6379:6379"
    command: >
      sh -c 'exec redis-server --requirepass "$(cat /run/secrets/redis_password)"'
    volumes:
      - ./certs/redis:/usr/local/etc/redis/certs:ro
      - ./secret.txt:/run/secrets/redis_password:ro
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$(cat /run/secrets/redis_password)", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    #command: >
    #  sh -c 'exec redis-server
    #  --tls-port 6379
    #  --port 0
    #  --tls-cert-file /usr/local/etc/redis/certs/redisdb.crt
    #  --tls-key-file /usr/local/etc/redis/certs/redisdb.key
    #  --tls-ca-cert-file /usr/local/etc/redis/certs/rootCA.pem
    #  --requirepass "$(cat /run/secrets/redis_password)"'

  auth_service:
    build:
      context: ./auth
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DATABASE_NAME: ${POSTGRES_DB_NAME}
      RABBIT_USER: ${RABBIT_USER}
      RABBIT_PASSWORD: ${RABBIT_PASSWORD}
      RABBIT_VIRTUAL_HOST: ${RABBIT_V_HOST}
      REDIS_PASSWORD: ${REDIS_SESSION_PASSWORD}
    volumes:
      - ./certs/auth:/certs/:ro
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  mailer_service:
    build:
      context: ./mail_server
      dockerfile: Dockerfile
    environment:
      RABBIT_PASSWORD: ${RABBIT_PASSWORD}
    depends_on:
      rabbitmq: 
        condition: service_healthy

  mongo_service:
    image: mongo:4.4
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    healthcheck:
      test: ["CMD", "mongo", "--username", "${MONGO_USER}", "--password", "${MONGO_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 15s
      retries: 8

    
    