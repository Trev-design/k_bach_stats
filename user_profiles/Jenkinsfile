pipeline{
    agent any

    stages{
        stage("user-management-test"){
            steps{
                echo "========build image========"
                checkout scm
                script {
                    def image = docker.build(
                        "my-dotnet-agent",
                        "-f user_profiles/Dockerfile.jenkins ."
                    )
                    echo "========configure test workspace"
                    image.inside('-v /certs/client:/certs/client:ro') {
                        withEnv([
                            "DOTNET_CLI_HOME=/tmp"
                            "DOCKER_HOST=tcp://docker:2376",
                            "DOCKER_CERT_PATH=/certs/client",
                            "DOCKER_TLS_VERIFY=1"
                            ]) {
                            dir('user_profiles') {
                                sh '''
                                    echo "üìÇ Inside container workspace:"
                                    pwd
                                    echo "üìÅ Structure:"
                                    ls -R
                                '''
                                echo "========executing user-management-test========"
                                echo "======== Restoring Packages ========"
                                sh 'dotnet restore'

                                echo "======== Building Solution ========"
                                sh 'dotnet build'
                            
                                echo "======== Running Tests (with Testcontainers & Ryuk) ========"
                                sh '''
                                    mkdir -p test-results
                                    dotnet test --no-build --logger "junit;LogFilePath=test-results/results.xml"
                                '''
                                junit 'test-results/results.xml'
                            }
                        }
                    }
                }
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "========A executed successfully========"
                    sh 'docker rmi my-dotnet-agent || true'
                }
                failure{
                    echo "========A execution failed========"
                    sh 'docker rmi my-dotnet-agent || true'
                }
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}