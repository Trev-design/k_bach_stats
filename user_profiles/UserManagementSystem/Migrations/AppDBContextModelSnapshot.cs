// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementSystem.Services.Database;

#nullable disable

namespace UserManagementSystem.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ContactUser", b =>
                {
                    b.Property<Guid>("ContactsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("char(36)");

                    b.HasKey("ContactsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserContacts", (string)null);
                });

            modelBuilder.Entity("ContactWorkspace", b =>
                {
                    b.Property<Guid>("ContactsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("WorkspacesId")
                        .HasColumnType("char(36)");

                    b.HasKey("ContactsId", "WorkspacesId");

                    b.HasIndex("WorkspacesId");

                    b.ToTable("WorkspaceContacts", (string)null);
                });

            modelBuilder.Entity("UserManagementSystem.Models.ChatRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("UserManagementSystem.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChatRoomId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ChatRoomId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("UserManagementSystem.Models.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("UserManagementSystem.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserManagementSystem.Models.Workspace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("ContactUser", b =>
                {
                    b.HasOne("UserManagementSystem.Models.Contact", null)
                        .WithMany()
                        .HasForeignKey("ContactsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagementSystem.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContactWorkspace", b =>
                {
                    b.HasOne("UserManagementSystem.Models.Contact", null)
                        .WithMany()
                        .HasForeignKey("ContactsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagementSystem.Models.Workspace", null)
                        .WithMany()
                        .HasForeignKey("WorkspacesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserManagementSystem.Models.ChatRoom", b =>
                {
                    b.HasOne("UserManagementSystem.Models.Workspace", "Workspace")
                        .WithMany("ChatRooms")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("UserManagementSystem.Models.Contact", b =>
                {
                    b.HasOne("UserManagementSystem.Models.ChatRoom", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ChatRoomId");

                    b.HasOne("UserManagementSystem.Models.Profile", "UserProfile")
                        .WithOne("UserContact")
                        .HasForeignKey("UserManagementSystem.Models.Contact", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("UserManagementSystem.Models.Profile", b =>
                {
                    b.HasOne("UserManagementSystem.Models.User", "ProfileUser")
                        .WithOne("UserProfile")
                        .HasForeignKey("UserManagementSystem.Models.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileUser");
                });

            modelBuilder.Entity("UserManagementSystem.Models.Workspace", b =>
                {
                    b.HasOne("UserManagementSystem.Models.User", "User")
                        .WithMany("Workspaces")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagementSystem.Models.ChatRoom", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("UserManagementSystem.Models.Profile", b =>
                {
                    b.Navigation("UserContact")
                        .IsRequired();
                });

            modelBuilder.Entity("UserManagementSystem.Models.User", b =>
                {
                    b.Navigation("UserProfile")
                        .IsRequired();

                    b.Navigation("Workspaces");
                });

            modelBuilder.Entity("UserManagementSystem.Models.Workspace", b =>
                {
                    b.Navigation("ChatRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
